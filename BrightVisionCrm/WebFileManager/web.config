<?xml version="1.0"?>
<configuration>
  <appSettings>
    <add key="DebugLoggingEnabled" value="true"/>
    <add key="LogPath" value="~/App_Data/WebDav/Logs"/>
    <add key="RepositoryPath" value="~/App_Data/WebDAV/Storage"/>
  </appSettings>
  <!--
  It is recommended to run your WebDAV Server in IIS 7.x Integrated mode. It provides improved performance comparing to 
  Classic mode. The Visual Studio ASP.NET Development Server can run in Classic mode only.  
  
  In IIS 6 and IIS 5.1 to allow folders with 'bin', 'App_code', 'App_Data', etc names and files with 'web.config' name 
  to be created in your storage, the aspnet_filter.dll mapping must be deleted at server level.
  -->
  <system.web>
    <httpHandlers>
      <!-- 
      As soon as entire website is dedicated to WebDAV and there are no any ASP.NET web pages, services, etc we can remove 
      all handlers here. If you wish to host your WebDAV server and ASP.NET/MVC website on the same virtual host use "Add WebDAV 
      Server Implementation" wizard in your ASP.NET/MVC project or web site context menu.
      -->
      <clear/>
      <!--       
      This handler processes all WebDAV requests.
      
      This WebDAV config section is used in IIS 7.x classic mode, IIS 6 and IIS 5.1. In IIS 6 and IIS 5.1 wildcard map must 
      be configured in IIS.
      -->
      <add verb="*" path="*" type="WebFileManager.DavHandler, WebFileManager"/>
    </httpHandlers>
    <httpModules>
      <!-- As all files are stored in a storage there is no need to verify permissions against Windows ACL using FileAuthorization module. -->
      <remove name="FileAuthorization"/>
      <!--            
      Provides sample Digest authentication implementation. The user credentials are validated against ASP.NET membership storage.
            
      This WebDAV config section is used in IIS 7.x classic mode, IIS 6 and IIS 5.1.
      -->
      <add name="MyDigestAuthenticationModule" type="WebFileManager.DigestAuthenticationModule, WebFileManager"/>
      <!-- 
      This module enables unbuffered PUT upload if ASP.NET 2.0 pool or VS Dev Server is used. It is required if you are implementing 
      resumable upload interfaces. Without this module, if ASP.NET 2.0 pool or VS Dev Server is used, the file will be first saved to 
      temporary ASP.NET upload folder, only when entire file is uploaded it becomes available for .NET user code and WebDAV Engine. 
      This module also improves upload performance for ASP.NET 2.0 pool regardless of resumable upload implementation. 
      
      This module is not required if ASP.NET 4.0 poll or later version is used and is ignored in this case.
      
      This WebDAV config section is used in IIS 7.x classic mode, IIS 6 and IIS 5.1.
      -->
      <add name="ITHitPutUploadProgressAndResumeModule" type="ITHit.WebDAV.Server.ResumableUpload.PutUploadProgressAndResumeModule, ITHit.WebDAV.Server"/>
      <!--
      This mobule is required to enable files upload from Ajax File Browser running in Internet Explorer. To display upload progress 
      IUploadProgress interface must be also implemented on file items. This module does not processes POST requests (postbacks) submitted 
      by ASP.NET pages. If you do not use Ajax File Browser or use it only in Firefox, Safari and Chrome you can remove this module. 
      
      This WebDAV config section is used in IIS 7.x classic mode, IIS 6 and IIS 5.1.
      -->
      <add name="ITHitPostUploadProgressModule" type="ITHit.WebDAV.Server.PostUploadProgressModule, ITHit.WebDAV.Server"/>
    </httpModules>
    <!-- 
    Maximum upload file segment size in Kb, max 2097151 (2Gb) for asp.net.
    
    To allow '&' and '%' in ASP.NET 4.0 set the httpRuntime@requestPathInvalidCharacters="". Note that 
    Microsoft Windows Shell (Miniredirector/Web Folders) does not support '%' in WebDAV item names.
    
    To allow trailing dots ('.') in ASP.NET 4.0 set httpRuntime@relaxedUrlToFileSystemMapping="true".
    -->
    <httpRuntime executionTimeout="2400" maxRequestLength="2097151"/>
    <customErrors mode="Off"/>
    <!-- 
    Authentication is set to 'None' here because authentication is performed not by asp.net but by authentication module configured in modules section.
    This sections is used for storing user names/passwords solely to be available to authentication modules via FormsMembershipProvider.
     -->
    <authentication mode="None">
      <forms>
        <credentials passwordFormat="Clear">
          <user name="BrightVisionUploaderUser" password="Br1ghty1s1onUp106dErUs3r"/>
          <user name="readOnly" password="readOnly"/>
        </credentials>
      </forms>
    </authentication>
    <membership defaultProvider="FormsProvider">
      <providers>
        <!-- This provider returns information about users/groups configured in authentication/forms/credentials section-->
        <add name="FormsProvider" type="WebFileManager.FormsMembershipProvider"/>
      </providers>
    </membership>
    <authorization>
      <!-- 
      To support Windows Shell (Miniredirector/Web Folders) on XP and Server 2003 as well as Firefox CORS requests, OPTIONS must be 
      processed without authentication. To enable authentication of OPTIONS request, remove "allow OPTIONS" from the list below and 
      remove OPTIONS check in AuthenticationModuleBase.App_OnAuthenticateRequest.
      -->
      <allow users="*" verbs="OPTIONS"/>
      <deny users="?"/>
      <allow users="*"/>
    </authorization>
    <globalization requestEncoding="utf-8" responseEncoding="utf-8"/>
    <compilation debug="true" targetFramework="4.0"/>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
  </system.web>
  <system.webServer>
    <handlers>
      <!-- 
        As soon as this folder is dedicated to WebDAV and there are no any ASP.NET web pages, services, etc we can remove 
        all handlers here.
        -->
      <clear/>
      <!-- Used only in IIS 7 Classic mode in 32-bit application if ASP.NET 2.0 pool is used --><!--
      <add name="aspnet_isapi 32-bit ASP.NET 2.0" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v2.0.50727\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv2.0,bitness32"/>
      --><!-- Used only in IIS 7 Classic mode in 64-bit application if ASP.NET 2.0 pool is used --><!--
      <add name="aspnet_isapi 64-bit ASP.NET 2.0" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v2.0.50727\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv2.0,bitness64"/>
      --><!-- Used only in IIS 7 Classic mode in 32-bit application if ASP.NET 4.0 pool is used --><!--
      <add name="aspnet_isapi 32-bit ASP.NET 4.0" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv4.0,bitness32"/>
      --><!-- Used only in IIS 7 Classic mode in 64-bit application if ASP.NET 4.0 pool is used --><!--
      <add name="aspnet_isapi 64-bit ASP.NET 4.0" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv4.0,bitness64"/>-->
      <!-- Used only in IIS 7 Integrated mode. In Classic mode system.web\httpHandlers section is used. -->
      <add name="My WebDAV Handler" path="*" verb="*" type="WebFileManager.DavHandler, WebFileManager" preCondition="integratedMode"/>
    </handlers>
    <!-- Used only in Integrated mode. In classic mode system.web\httpModules section is used. -->
    <modules>
      <!-- As all files are stored in a storage there is no need to verify permissions against Windows ACL using FileAuthorization module. -->
      <remove name="FileAuthorization"/>
      <!--            
      Provides sample Digest authentication implementation. The user credentials are validated against ASP.NET membership storage.
            
      This WebDAV config section is used in IIS 7.x integrated mode only, no wildcard map configuration is required.
      -->
      <add name="MyDigestAuthenticationModule" type="WebFileManager.DigestAuthenticationModule, WebFileManager"/>
      <!--
      This module enables unbuffered PUT upload if ASP.NET 2.0 pool or VS Dev Server is used. It is required if you are implementing 
      resumable upload interfaces. Without this module, if ASP.NET 2.0 pool or VS Dev Server is used, the file will be first saved to 
      temporary ASP.NET upload folder, only when entire file is uploaded it becomes available for .NET user code and WebDAV Engine. 
      This module also improves upload performance for ASP.NET 2.0 pool regardless of resumable upload implementation.
      
      This module is not required if ASP.NET 4.0 poll or later version is used and is ignored in this case.
      
      This WebDAV config section is used in IIS 7.x integrated mode only, no wildcard map configuration is required.      
      -->
      <add name="ITHitPutUploadProgressAndResumeModule" type="ITHit.WebDAV.Server.ResumableUpload.PutUploadProgressAndResumeModule, ITHit.WebDAV.Server"/>
      <!--
      This mobule is required to enable files upload from Ajax File Browser running in Internet Explorer. To display upload progress 
      IUploadProgress interface must be also implemented on file items. This module does not processes POST requests (postbacks) submitted 
      by ASP.NET pages. If you do not use Ajax File Browser or use it only in Firefox, Safari and Chrome you can remove this module. 

      This WebDAV config section is used in IIS 7.x integrated mode only, no wildcard map configuration is required.
      -->
      <add name="ITHitPostUploadProgressModule" type="ITHit.WebDAV.Server.PostUploadProgressModule, ITHit.WebDAV.Server"/>
      <!-- Disables Microsoft IIS 7 WebDAV in integrated mode. It must be disabled for the engine to function properly. -->
      <remove name="WebDAVModule"/>
    </modules>
    <validation validateIntegratedModeConfiguration="false"/>
    <!-- Used in both Integrated and Classic mode -->
    <security>
      <!-- 
      As all files are stored in a storage there is no need in additional protection.
      
      * To allow '+' in item names the allowDoubleEscaping attribute is set to 'true'.
      * To allow '&' and '%' in ASP.NET 2.0, IIS 7 the "VerificationCompatibility"= dword:00000001 must be set under the 
        key: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\ASP.NET
      * To allow '&' and '%' in ASP.NET 4.0 set the configuration\system.web\httpRuntime@requestPathInvalidCharacters="".
      * To allow trailing dots ('.') in ASP.NET 4.0 set httpRuntime@relaxedUrlToFileSystemMapping="true".
      Note that Microsoft Windows Shell (Miniredirector/Web Folders) does not support '%' in WebDAV item names.
      -->
      <requestFiltering allowDoubleEscaping="true">
        <!-- Allow all files with 'web.config' name. -->
        <fileExtensions>
          <clear/>
        </fileExtensions>
        <!-- Allow all folders with 'bin', 'App_code', 'App_Data', etc names. -->
        <hiddenSegments>
          <clear/>
        </hiddenSegments>
        <!-- Maximum upload file segment size in bytes is 2147483648 (2Gb) for IIS 7 / asp.net. -->
        <requestLimits maxAllowedContentLength="2147483648"/>
      </requestFiltering>
    </security>
  </system.webServer>
</configuration>